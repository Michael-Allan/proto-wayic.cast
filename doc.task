wayic.cast/doc.task - Documentation in rough

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Configuration of a waycast`
    * waycast root directory
        - configuration placed in files of the waycast root directory
        + waycast.json
            - general (declarative) configuration file
            - format: JSON
                ( http://www.json.org/
            < waycast_names
                ( q.v. in http://reluk.ca/project/wayic/web/doc.task § Waycast reference
        + way_declaration_document.css
            < see wayic.web § Configuration of a waycast
                ( http://reluk.ca/project/wayic/web/doc.task
        + way_declaration_document.js
            < see wayic.web § Configuration of a waycast
                ( http://reluk.ca/project/wayic/web/doc.task
    * way declaration document
        < see wayic.web § Configuration of a waycast
            ( http://reluk.ca/project/wayic/web/doc.task

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Design constraints`
    [ ⤓ minimal
        - the necessary form of a waycast
        + ‘.xht’ extension
            - on the file name of each way declaration document
            - without it
                - on requesting the document from a ‘file’ scheme URL
                    - e.g. to view one’s original waycast which is stored on one’s local computer
                    - browsers would take it as (medium type) text/xml
                      as opposed to what is proper for wayscript
                        - namely application/xhtml+xml
                - so they would load it into the DOM as an XMLDocument
                  which could break co-loaded (JavaScript) programs that expect an HTMLDocument
        + a way root document
            ( § Way root document § ⤓ minimal content
        + relative referencing bound by the waycast
            - all relative referencing in a waycast is bound by the waycast
            - ensuring that no reference resolves to an extracast referent
            ∴ so bound
                ∵ unbounded relative references would be liable to breakage
                    ∵ the waycast is portable
                        ∵ need basic utility
                        ∵ need user freedom
                            ∵ wayic.architec § Fi Maximization of user freedom
                                ( http://reluk.ca/project/wayic/architec/doc.task
                    ∵ the waycast is copyable
                        ∵ wayic.architec § Fo Maximization of system availability to non-users
                            ( http://reluk.ca/project/wayic/architec/doc.task

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Formally intracast reference`
    - a relative reference that is formally self constrained to the boundary of the referring waycast
        ( e.g. in compliance with § Design constraints § relative referencing bound by the waycast
    < see also subtype (wayic.intercast §) import reference
        ( http://reluk.ca/project/wayic/intercast/doc.task
    - given its (§) basic form and (§) resolution context
        - a formally intracast reference needs no further bounds checking
            ( e.g. by a wayscript processor
        - its form alone constrains it to the waycast boundary
        - itself proof against an extracast referent
    - hence references of this type are *formally* intracast
    * form
        - a relative reference without a dot segment
            ( relative reference, https://tools.ietf.org/html/rfc3986#section-4.2
            ( dot-segment,        https://tools.ietf.org/html/rfc3986#section-3.3
    * resolution context
        - waycast context
            ( ./waycast_context
        - whereby a leading '/' (absolute path) grounds the reference on the waycast root directory
            ( path-absolute, https://tools.ietf.org/html/rfc3986#section-3.3
            ( ./waycast_root_directory

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Public identification`
    - form
        ( [EBN]

          waycast public identifier = ? as per http://reluk.ca/project/wayic/cast/project.task
            § waycast relative references and waycast public locations § waycast public location ?;

          waybit public identifier =
            waycast public identifier, dotless relative path, '#', extended element reference ;

              dotless relative path = ? a relative-path reference without a dot segment,
                as per https://tools.ietf.org/html/rfc3986#section-4.2, -3.3 ?;

              extended element reference = ? as per
                http://reluk.ca/project/wayic/script/doc.task § Extended element referencing ?;


    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Way root document`
    ( ./way_root_document
    - waycast file /way.xht
        ( name: way.xht
        ( location: waycast root directory
    - realizes the purpose of the waycast for a given waycaster
      in declaring both his way and his active commitments to it
    [ ⤓ minimal content
        + a way declaration
            - a minimal declaration comprises a way root element in the form of an intercast joint
                ( http://reluk.ca/project/wayic/script/way_root_element
                ( http://reluk.ca/project/wayic/intercast/ § Intercast joint
                = clarify the form
                    - a joint has *two* elements, not one
                = verify that it meets the formal contraints
                    - e.g. of the way root element, and of joint elements
                = verify that the subjoint elements would be on way
                    - covered that is by the definition of "on way"
            - this is also a typical way declaration, though not infrequently
              it would be amended by patching
                ( http://reluk.ca/project/wayic/intercast/ § *patch* element
        + a resolve waybit
            ( http://reluk.ca/project/wayic/script/doc.task § resolve waybit
            - the minimum here is a waybit with an *id* attribute of ‘commitment’
            - no actual commitment declaration is required
                ( http://reluk.ca/project/wayic/script/doc.task § Commitment declaration
                - though a typical waycast would have at least one


    ════════════════════════════════════════════════════════════════════════════════════════════════════
    Note`

    [EBN]  Extended Backus-Naur syntax notation, ISO/IEC 14977.
            ( http://standards.iso.org/ittf/PubliclyAvailableStandards/index.html
            ( https://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf
            ( summary, https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form


                                     Copyright © 2017-2018 Michael Allan and contributors.  Licence MIT.
