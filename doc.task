wayic.cast/doc.task - Documentation in rough

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Design constraints`
    [ ⤓ minimal
        - the necessary form of a waycast
        + ‘.xht’ extension
            - on the file name of each way declaration document
            - without it
                - on requesting the document from a ‘file’ scheme URL
                    - e.g. to view one’s original waycast which is stored on one’s local computer
                    - browsers would take it as (medium type) text/xml
                      as opposed to what is proper for wayscript
                        - namely application/xhtml+xml
                - so they would load it into the DOM as an XMLDocument
                  which could break co-loaded (JavaScript) programs that expect an HTMLDocument
        + a way root document
            ( § Way root document § ⤓ minimal content

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Personal configuration`
    [ web view of way declaration documents
        - the web view of each way declaration document is configured by these files
          located in the waycast root directory
            * way.css
                - personal style sheet
                ( example: http://reluk.ca/project/waycast/way.css
            * way.js
                - personal configuration program
                ( example: http://reluk.ca/project/waycast/way.js
        - they configure both the view shown to the waycaster
            - and the default view shown to others
        + usage instructions for a way declaration document
            - any reference to a personal configuration file must be a relative path reference
                ( relative-path reference, https://tools.ietf.org/html/rfc3986#section-4.2
                - meaning that both the *href* and *src* attributes in the examples below must begin
                  with neither a scheme component (no 'http:' for instance) nor a slash (no leading '/')
            =1 link to way.css from the *head* element of the document
                - examples:

                      <head>
                          · · ·
                          <link rel='stylesheet' href='way.css'/> <!-- HERE CUSTOM -->
                          · · ·
                          </head>

                    - or, from a subdirectory:
                        ( i.e. your way declaration document is not in the waycast root directory

                          <link rel='stylesheet' href='../../way.css'/>  · · ·

            =2 load way.js from the bottom of the *body* element
                - examples:

                      <body>
                          · · ·
                          <script src='way.js'/> <!-- HERE CUSTOM -->
                          </body>

                    - or, from a subdirectory:

                          <script src='../../way.js'/>  · · ·

            - working example
                ( source: https://github.com/Michael-Allan/waycast/blob/master/constraints.xht
                ( live: http://reluk.ca/project/waycast/constraints.xht

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Way root document`
    ( ./way_root_document
    - waycast file /way.xht
        ( name: way.xht
        ( location: waycast root directory
    - realizes the purpose of the waycast for a given waycaster
      in declaring both his way and his active commitments to it
    [ ⤓ minimal content
        + a way declaration
            - a minimal declaration comprises a way root element in the form of an intercast joint
                ( http://reluk.ca/project/wayic/script/way_root_element
                ( http://reluk.ca/project/wayic/intercast/ § Intercast joint
                = clarify the form
                    - a joint has *two* elements, not one
                = verify that it meets the formal contraints
                    - e.g. of the way root element, and of joint elements
                = verify that the subjoint elements would be on way
                    - covered that is by the definition of "on way"
            - this is also a typical way declaration, though not infrequently
              it would be accompanied by the declaration of one or more variant waybits, too
                ( http://reluk.ca/project/wayic/intercast/ § *patch* element
        + a resolve waybit
            ( http://reluk.ca/project/wayic/script/doc.task § resolve waybit
            - the minimum here is a waybit with an *id* attribute of ‘commitment’
            - no actual commitment declaration is required
                ( http://reluk.ca/project/wayic/script/doc.task § Commitment declaration
                - though a typical waycast would have at least one


                                     Copyright © 2017-2018 Michael Allan and contributors.  Licence MIT.
